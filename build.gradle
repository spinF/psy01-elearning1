import groovy.io.FileType

task clean(type: Delete) {
  delete 'build'
}

task buildR {
  inputs.file('src/print/**/*.R')
  outputs.file('build/latex')
  doLast {
    new File('src/print/').eachFileRecurse(FileType.FILES) {
      file ->
      if (file.name.endsWith('.R')) {
        exec {
          workingDir "$projectDir"
          commandLine 'R', '-f', file.absolutePath
        }
      }
    }
  }
}

task copyLatex(type: Sync) {
  from 'src/print/'
  into 'build/latex/src'
  include '**/*.tex'
}

task buildLatex(type: Exec) {
  dependsOn copyLatex
  dependsOn buildR

  inputs.file('../src/lektion1.tex')
  outputs.file("$buildDir/latex/output")

  workingDir "$buildDir/latex/output"
  commandLine 'pdflatex', '../src/lektion1.tex'
  doFirst {
    new File("$buildDir/latex/output").mkdirs();
  }
}

task buildWeb(type: Exec) {
  inputs.file("src/web/")
  outputs.file("build/web")

  workingDir "src/web/"
  commandLine 'npm', 'run', 'build'
  doFirst {
    exec {
      workingDir "src/web"
      commandLine 'npm', 'install'
    }
  }
}

task dist(type: Sync) {
  from "$buildDir/latex/output"
  into "$buildDir/dist"
  include "**/*.pdf"
  doLast {
    new File("$buildDir/dist").mkdirs();
  }
}

task build {
  dependsOn buildLatex
  dependsOn buildWeb
}
